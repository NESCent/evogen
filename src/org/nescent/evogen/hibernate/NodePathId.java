package org.nescent.evogen.hibernate;



/**
 * NodePathId generated by MyEclipse - Hibernate Tools
 */

public class NodePathId  implements java.io.Serializable {


    // Fields    

     private Node node;
     private Node node_1;
     private Integer distance;


    // Constructors

    /** default constructor */
    public NodePathId() {
    }

    
    /** full constructor */
    public NodePathId(Node node, Node node_1, Integer distance) {
        this.node = node;
        this.node_1 = node_1;
        this.distance = distance;
    }

   
    // Property accessors

    public Node getNode() {
        return this.node;
    }
    
    public void setNode(Node node) {
        this.node = node;
    }

    public Node getNode_1() {
        return this.node_1;
    }
    
    public void setNode_1(Node node_1) {
        this.node_1 = node_1;
    }

    public Integer getDistance() {
        return this.distance;
    }
    
    public void setDistance(Integer distance) {
        this.distance = distance;
    }
   



   public boolean equals(Object other) {
         if ( (this == other ) ) return true;
		 if ( (other == null ) ) return false;
		 if ( !(other instanceof NodePathId) ) return false;
		 NodePathId castOther = ( NodePathId ) other; 
         
		 return ( (this.getNode()==castOther.getNode()) || ( this.getNode()!=null && castOther.getNode()!=null && this.getNode().equals(castOther.getNode()) ) )
 && ( (this.getNode_1()==castOther.getNode_1()) || ( this.getNode_1()!=null && castOther.getNode_1()!=null && this.getNode_1().equals(castOther.getNode_1()) ) )
 && ( (this.getDistance()==castOther.getDistance()) || ( this.getDistance()!=null && castOther.getDistance()!=null && this.getDistance().equals(castOther.getDistance()) ) );
   }
   
   public int hashCode() {
         int result = 17;
         
         result = 37 * result + ( getNode() == null ? 0 : this.getNode().hashCode() );
         result = 37 * result + ( getNode_1() == null ? 0 : this.getNode_1().hashCode() );
         result = 37 * result + ( getDistance() == null ? 0 : this.getDistance().hashCode() );
         return result;
   }   





}